version: '3.8'

services:
  db:
    image: postgres:15
    platform: linux/arm64/v4
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    platform: linux/arm64/v4
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    platform: linux/arm64/v4
    build:
      context: ./client
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - backend
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    platform: linux/arm64/v4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - ./server/generate_servers.sh:/docker-entrypoint-initdb.d/generate_servers.sh
    depends_on:
      - db

volumes:
  postgres_data: